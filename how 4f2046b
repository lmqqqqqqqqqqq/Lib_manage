[1mdiff --git a/JavaFX/mvnw b/JavaFX/mvnw[m
[1mindex 97347cb..8a8fb22 100644[m
[1m--- a/JavaFX/mvnw[m
[1m+++ b/JavaFX/mvnw[m
[36m@@ -1,316 +1,316 @@[m
[31m-#!/bin/sh[m
[31m-# ----------------------------------------------------------------------------[m
[31m-# Licensed to the Apache Software Foundation (ASF) under one[m
[31m-# or more contributor license agreements.  See the NOTICE file[m
[31m-# distributed with this work for additional information[m
[31m-# regarding copyright ownership.  The ASF licenses this file[m
[31m-# to you under the Apache License, Version 2.0 (the[m
[31m-# "License"); you may not use this file except in compliance[m
[31m-# with the License.  You may obtain a copy of the License at[m
[31m-#[m
[31m-#    https://www.apache.org/licenses/LICENSE-2.0[m
[31m-#[m
[31m-# Unless required by applicable law or agreed to in writing,[m
[31m-# software distributed under the License is distributed on an[m
[31m-# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[31m-# KIND, either express or implied.  See the License for the[m
[31m-# specific language governing permissions and limitations[m
[31m-# under the License.[m
[31m-# ----------------------------------------------------------------------------[m
[31m-[m
[31m-# ----------------------------------------------------------------------------[m
[31m-# Maven Start Up Batch script[m
[31m-#[m
[31m-# Required ENV vars:[m
[31m-# ------------------[m
[31m-#   JAVA_HOME - location of a JDK home dir[m
[31m-#[m
[31m-# Optional ENV vars[m
[31m-# -----------------[m
[31m-#   M2_HOME - location of maven2's installed home dir[m
[31m-#   MAVEN_OPTS - parameters passed to the Java VM when running Maven[m
[31m-#     e.g. to debug Maven itself, use[m
[31m-#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000[m
[31m-#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files[m
[31m-# ----------------------------------------------------------------------------[m
[31m-[m
[31m-if [ -z "$MAVEN_SKIP_RC" ] ; then[m
[31m-[m
[31m-  if [ -f /usr/local/etc/mavenrc ] ; then[m
[31m-    . /usr/local/etc/mavenrc[m
[31m-  fi[m
[31m-[m
[31m-  if [ -f /etc/mavenrc ] ; then[m
[31m-    . /etc/mavenrc[m
[31m-  fi[m
[31m-[m
[31m-  if [ -f "$HOME/.mavenrc" ] ; then[m
[31m-    . "$HOME/.mavenrc"[m
[31m-  fi[m
[31m-[m
[31m-fi[m
[31m-[m
[31m-# OS specific support.  $var _must_ be set to either true or false.[m
[31m-cygwin=false;[m
[31m-darwin=false;[m
[31m-mingw=false[m
[31m-case "`uname`" in[m
[31m-  CYGWIN*) cygwin=true ;;[m
[31m-  MINGW*) mingw=true;;[m
[31m-  Darwin*) darwin=true[m
[31m-    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home[m
[31m-    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html[m
[31m-    if [ -z "$JAVA_HOME" ]; then[m
[31m-      if [ -x "/usr/libexec/java_home" ]; then[m
[31m-        export JAVA_HOME="`/usr/libexec/java_home`"[m
[31m-      else[m
[31m-        export JAVA_HOME="/Library/Java/Home"[m
[31m-      fi[m
[31m-    fi[m
[31m-    ;;[m
[31m-esac[m
[31m-[m
[31m-if [ -z "$JAVA_HOME" ] ; then[m
[31m-  if [ -r /etc/gentoo-release ] ; then[m
[31m-    JAVA_HOME=`java-config --jre-home`[m
[31m-  fi[m
[31m-fi[m
[31m-[m
[31m-if [ -z "$M2_HOME" ] ; then[m
[31m-  ## resolve links - $0 may be a link to maven's home[m
[31m-  PRG="$0"[m
[31m-[m
[31m-  # need this for relative symlinks[m
[31m-  while [ -h "$PRG" ] ; do[m
[31m-    ls=`ls -ld "$PRG"`[m
[31m-    link=`expr "$ls" : '.*-> \(.*\)$'`[m
[31m-    if expr "$link" : '/.*' > /dev/null; then[m
[31m-      PRG="$link"[m
[31m-    else[m
[31m-      PRG="`dirname "$PRG"`/$link"[m
[31m-    fi[m
[31m-  done[m
[31m-[m
[31m-  saveddir=`pwd`[m
[31m-[m
[31m-  M2_HOME=`dirname "$PRG"`/..[m
[31m-[m
[31m-  # make it fully qualified[m
[31m-  M2_HOME=`cd "$M2_HOME" && pwd`[m
[31m-[m
[31m-  cd "$saveddir"[m
[31m-  # echo Using m2 at $M2_HOME[m
[31m-fi[m
[31m-[m
[31m-# For Cygwin, ensure paths are in UNIX format before anything is touched[m
[31m-if $cygwin ; then[m
[31m-  [ -n "$M2_HOME" ] &&[m
[31m-    M2_HOME=`cygpath --unix "$M2_HOME"`[m
[31m-  [ -n "$JAVA_HOME" ] &&[m
[31m-    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`[m
[31m-  [ -n "$CLASSPATH" ] &&[m
[31m-    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`[m
[31m-fi[m
[31m-[m
[31m-# For Mingw, ensure paths are in UNIX format before anything is touched[m
[31m-if $mingw ; then[m
[31m-  [ -n "$M2_HOME" ] &&[m
[31m-    M2_HOME="`(cd "$M2_HOME"; pwd)`"[m
[31m-  [ -n "$JAVA_HOME" ] &&[m
[31m-    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"[m
[31m-fi[m
[31m-[m
[31m-if [ -z "$JAVA_HOME" ]; then[m
[31m-  javaExecutable="`which javac`"[m
[31m-  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then[m
[31m-    # readlink(1) is not available as standard on Solaris 10.[m
[31m-    readLink=`which readlink`[m
[31m-    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then[m
[31m-      if $darwin ; then[m
[31m-        javaHome="`dirname \"$javaExecutable\"`"[m
[31m-        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"[m
[31m-      else[m
[31m-        javaExecutable="`readlink -f \"$javaExecutable\"`"[m
[31m-      fi[m
[31m-      javaHome="`dirname \"$javaExecutable\"`"[m
[31m-      javaHome=`expr "$javaHome" : '\(.*\)/bin'`[m
[31m-      JAVA_HOME="$javaHome"[m
[31m-      export JAVA_HOME[m
[31m-    fi[m
[31m-  fi[m
[31m-fi[m
[31m-[m
[31m-if [ -z "$JAVACMD" ] ; then[m
[31m-  if [ -n "$JAVA_HOME"  ] ; then[m
[31m-    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then[m
[31m-      # IBM's JDK on AIX uses strange locations for the executables[m
[31m-      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[31m-    else[m
[31m-      JAVACMD="$JAVA_HOME/bin/java"[m
[31m-    fi[m
[31m-  else[m
[31m-    JAVACMD="`\\unset -f command; \\command -v java`"[m
[31m-  fi[m
[31m-fi[m
[31m-[m
[31m-if [ ! -x "$JAVACMD" ] ; then[m
[31m-  echo "Error: JAVA_HOME is not defined correctly." >&2[m
[31m-  echo "  We cannot execute $JAVACMD" >&2[m
[31m-  exit 1[m
[31m-fi[m
[31m-[m
[31m-if [ -z "$JAVA_HOME" ] ; then[m
[31m-  echo "Warning: JAVA_HOME environment variable is not set."[m
[31m-fi[m
[31m-[m
[31m-CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher[m
[31m-[m
[31m-# traverses directory structure from process work directory to filesystem root[m
[31m-# first directory with .mvn subdirectory is considered project base directory[m
[31m-find_maven_basedir() {[m
[31m-[m
[31m-  if [ -z "$1" ][m
[31m-  then[m
[31m-    echo "Path not specified to find_maven_basedir"[m
[31m-    return 1[m
[31m-  fi[m
[31m-[m
[31m-  basedir="$1"[m
[31m-  wdir="$1"[m
[31m-  while [ "$wdir" != '/' ] ; do[m
[31m-    if [ -d "$wdir"/.mvn ] ; then[m
[31m-      basedir=$wdir[m
[31m-      break[m
[31m-    fi[m
[31m-    # workaround for JBEAP-8937 (on Solaris 10/Sparc)[m
[31m-    if [ -d "${wdir}" ]; then[m
[31m-      wdir=`cd "$wdir/.."; pwd`[m
[31m-    fi[m
[31m-    # end of workaround[m
[31m-  done[m
[31m-  echo "${basedir}"[m
[31m-}[m
[31m-[m
[31m-# concatenates all lines of a file[m
[31m-concat_lines() {[m
[31m-  if [ -f "$1" ]; then[m
[31m-    echo "$(tr -s '\n' ' ' < "$1")"[m
[31m-  fi[m
[31m-}[m
[31m-[m
[31m-BASE_DIR=`find_maven_basedir "$(pwd)"`[m
[31m-if [ -z "$BASE_DIR" ]; then[m
[31m-  exit 1;[m
[31m-fi[m
[31m-[m
[31m-##########################################################################################[m
[31m-# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central[m
[31m-# This allows using the maven wrapper in projects that prohibit checking in binary data.[m
[31m-##########################################################################################[m
[31m-if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then[m
[31m-    if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-      echo "Found .mvn/wrapper/maven-wrapper.jar"[m
[31m-    fi[m
[31m-else[m
[31m-    if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."[m
[31m-    fi[m
[31m-    if [ -n "$MVNW_REPOURL" ]; then[m
[31m-      jarUrl="$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar"[m
[31m-    else[m
[31m-      jarUrl="https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar"[m
[31m-    fi[m
[31m-    while IFS="=" read key value; do[m
[31m-      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;[m
[31m-      esac[m
[31m-    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"[m
[31m-    if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-      echo "Downloading from: $jarUrl"[m
[31m-    fi[m
[31m-    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"[m
[31m-    if $cygwin; then[m
[31m-      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`[m
[31m-    fi[m
[31m-[m
[31m-    if command -v wget > /dev/null; then[m
[31m-        if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-          echo "Found wget ... using wget"[m
[31m-        fi[m
[31m-        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then[m
[31m-            wget "$jarUrl" -O "$wrapperJarPath" || rm -f "$wrapperJarPath"[m
[31m-        else[m
[31m-            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath" || rm -f "$wrapperJarPath"[m
[31m-        fi[m
[31m-    elif command -v curl > /dev/null; then[m
[31m-        if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-          echo "Found curl ... using curl"[m
[31m-        fi[m
[31m-        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then[m
[31m-            curl -o "$wrapperJarPath" "$jarUrl" -f[m
[31m-        else[m
[31m-            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f[m
[31m-        fi[m
[31m-[m
[31m-    else[m
[31m-        if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-          echo "Falling back to using Java to download"[m
[31m-        fi[m
[31m-        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"[m
[31m-        # For Cygwin, switch paths to Windows format before running javac[m
[31m-        if $cygwin; then[m
[31m-          javaClass=`cygpath --path --windows "$javaClass"`[m
[31m-        fi[m
[31m-        if [ -e "$javaClass" ]; then[m
[31m-            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then[m
[31m-                if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-                  echo " - Compiling MavenWrapperDownloader.java ..."[m
[31m-                fi[m
[31m-                # Compiling the Java class[m
[31m-                ("$JAVA_HOME/bin/javac" "$javaClass")[m
[31m-            fi[m
[31m-            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then[m
[31m-                # Running the downloader[m
[31m-                if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-                  echo " - Running MavenWrapperDownloader.java ..."[m
[31m-                fi[m
[31m-                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")[m
[31m-            fi[m
[31m-        fi[m
[31m-    fi[m
[31m-fi[m
[31m-##########################################################################################[m
[31m-# End of extension[m
[31m-##########################################################################################[m
[31m-[m
[31m-export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}[m
[31m-if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-  echo $MAVEN_PROJECTBASEDIR[m
[31m-fi[m
[31m-MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"[m
[31m-[m
[31m-# For Cygwin, switch paths to Windows format before running java[m
[31m-if $cygwin; then[m
[31m-  [ -n "$M2_HOME" ] &&[m
[31m-    M2_HOME=`cygpath --path --windows "$M2_HOME"`[m
[31m-  [ -n "$JAVA_HOME" ] &&[m
[31m-    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`[m
[31m-  [ -n "$CLASSPATH" ] &&[m
[31m-    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`[m
[31m-  [ -n "$MAVEN_PROJECTBASEDIR" ] &&[m
[31m-    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`[m
[31m-fi[m
[31m-[m
[31m-# Provide a "standardized" way to retrieve the CLI args that will[m
[31m-# work with both Windows and non-Windows executions.[m
[31m-MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"[m
[31m-export MAVEN_CMD_LINE_ARGS[m
[31m-[m
[31m-WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain[m
[31m-[m
[31m-exec "$JAVACMD" \[m
[31m-  $MAVEN_OPTS \[m
[31m-  $MAVEN_DEBUG_OPTS \[m
[31m-  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \[m
[31m-  "-Dmaven.home=${M2_HOME}" \[m
[31m-  "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \[m
[31m-  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#    https://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Maven Start Up Batch script[m
[32m+[m[32m#[m
[32m+[m[32m# Required ENV vars:[m
[32m+[m[32m# ------------------[m
[32m+[m[32m#   JAVA_HOME - location of a JDK home dir[m
[32m+[m[32m#[m
[32m+[m[32m# Optional ENV vars[m
[32m+[m[32m# -----------------[m
[32m+[m[32m#   M2_HOME - location of maven2's installed home dir[m
[32m+[m[32m#   MAVEN_OPTS - parameters passed to the Java VM when running Maven[m
[32m+[m[32m#     e.g. to debug Maven itself, use[m
[32m+[m[32m#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000[m
[32m+[m[32m#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mif [ -z "$MAVEN_SKIP_RC" ] ; then[m
[32m+[m
[32m+[m[32m  if [ -f /usr/local/etc/mavenrc ] ; then[m
[32m+[m[32m    . /usr/local/etc/mavenrc[m
[32m+[m[32m  fi[m
[32m+[m
[32m+[m[32m  if [ -f /etc/mavenrc ] ; then[m
[32m+[m[32m    . /etc/mavenrc[m
[32m+[m[32m  fi[m
[32m+[m
[32m+[m[32m  if [ -f "$HOME/.mavenrc" ] ; then[m
[32m+[m[32m    . "$HOME/.mavenrc"[m
[32m+[m[32m  fi[m
[32m+[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# OS specific support.  $var _must_ be set to either true or false.[m
[32m+[m[32mcygwin=false;[m
[32m+[m[32mdarwin=false;[m
[32m+[m[32mmingw=false[m
[32m+[m[32mcase "`uname`" in[m
[32m+[m[32m  CYGWIN*) cygwin=true ;;[m
[32m+[m[32m  MINGW*) mingw=true;;[m
[32m+[m[32m  Darwin*) darwin=true[m
[32m+[m[32m    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home[m
[32m+[m[32m    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html[m
[32m+[m[32m    if [ -z "$JAVA_HOME" ]; then[m
[32m+[m[32m      if [ -x "/usr/libexec/java_home" ]; then[m
[32m+[m[32m        export JAVA_HOME="`/usr/libexec/java_home`"[m
[32m+[m[32m      else[m
[32m+[m[32m        export JAVA_HOME="/Library/Java/Home"[m
[32m+[m[32m      fi[m
[32m+[m[32m    fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -z "$JAVA_HOME" ] ; then[m
[32m+[m[32m  if [ -r /etc/gentoo-release ] ; then[m
[32m+[m[32m    JAVA_HOME=`java-config --jre-home`[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mif [ -z "$M2_HOME" ] ; then[m
[32m+[m[32m  ## resolve links - $0 may be a link to maven's home[m
[32m+[m[32m  PRG="$0"[m
[32m+[m
[32m+[m[32m  # need this for relative symlinks[m
[32m+[m[32m  while [ -h "$PRG" ] ; do[m
[32m+[m[32m    ls=`ls -ld "$PRG"`[m
[32m+[m[32m    link=`expr "$ls" : '.*-> \(.*\)$'`[m
[32m+[m[32m    if expr "$link" : '/.*' > /dev/null; then[m
[32m+[m[32m      PRG="$link"[m
[32m+[m[32m    else[m
[32m+[m[32m      PRG="`dirname "$PRG"`/$link"[m
[32m+[m[32m    fi[m
[32m+[m[32m  done[m
[32m+[m
[32m+[m[32m  saveddir=`pwd`[m
[32m+[m
[32m+[m[32m  M2_HOME=`dirname "$PRG"`/..[m
[32m+[m
[32m+[m[32m  # make it fully qualified[m
[32m+[m[32m  M2_HOME=`cd "$M2_HOME" && pwd`[m
[32m+[m
[32m+[m[32m  cd "$saveddir"[m
[32m+[m[32m  # echo Using m2 at $M2_HOME[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# For Cygwin, ensure paths are in UNIX format before anything is touched[m
[32m+[m[32mif $cygwin ; then[m
[32m+[m[32m  [ -n "$M2_HOME" ] &&[m
[32m+[m[32m    M2_HOME=`cygpath --unix "$M2_HOME"`[m
[32m+[m[32m  [ -n "$JAVA_HOME" ] &&[m
[32m+[m[32m    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`[m
[32m+[m[32m  [ -n "$CLASSPATH" ] &&[m
[32m+[m[32m    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# For Mingw, ensure paths are in UNIX format before anything is touched[m
[32m+[m[32mif $mingw ; then[m
[32m+[m[32m  [ -n "$M2_HOME" ] &&[m
[32m+[m[32m    M2_HOME="`(cd "$M2_HOME"; pwd)`"[m
[32m+[m[32m  [ -n "$JAVA_HOME" ] &&[m
[32m+[m[32m    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mif [ -z "$JAVA_HOME" ]; then[m
[32m+[m[32m  javaExecutable="`which javac`"[m
[32m+[m[32m  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then[m
[32m+[m[32m    # readlink(1) is not available as standard on Solaris 10.[m
[32m+[m[32m    readLink=`which readlink`[m
[32m+[m[32m    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then[m
[32m+[m[32m      if $darwin ; then[m
[32m+[m[32m        javaHome="`dirname \"$javaExecutable\"`"[m
[32m+[m[32m        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"[m
[32m+[m[32m      else[m
[32m+[m[32m        javaExecutable="`readlink -f \"$javaExecutable\"`"[m
[32m+[m[32m      fi[m
[32m+[m[32m      javaHome="`dirname \"$javaExecutable\"`"[m
[32m+[m[32m      javaHome=`expr "$javaHome" : '\(.*\)/bin'`[m
[32m+[m[32m      JAVA_HOME="$javaHome"[m
[32m+[m[32m      export JAVA_HOME[m
[32m+[m[32m    fi[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mif [ -z "$JAVACMD" ] ; then[m
[32m+[m[32m  if [ -n "$JAVA_HOME"  ] ; then[m
[32m+[m[32m    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then[m
[32m+[m[32m      # IBM's JDK on AIX uses strange locations for the executables[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[32m+[m[32m    else[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/bin/java"